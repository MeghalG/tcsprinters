{"_ts": 1761543520.012407, "data": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <link href=\"http://arxiv.org/api/query?search_query%3Dti%3A%22Dueling%20optimization%20with%20a%20monotone%20adversary%22%26id_list%3D%26start%3D0%26max_results%3D25\" rel=\"self\" type=\"application/atom+xml\"/>\n  <title type=\"html\">ArXiv Query: search_query=ti:\"Dueling optimization with a monotone adversary\"&amp;id_list=&amp;start=0&amp;max_results=25</title>\n  <id>http://arxiv.org/api/7p6BQ+3LBjqUrghYMbLuZ7t63uE</id>\n  <updated>2025-10-27T00:00:00-04:00</updated>\n  <opensearch:totalResults xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">1</opensearch:totalResults>\n  <opensearch:startIndex xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">0</opensearch:startIndex>\n  <opensearch:itemsPerPage xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">25</opensearch:itemsPerPage>\n  <entry>\n    <id>http://arxiv.org/abs/2311.11185v1</id>\n    <updated>2023-11-18T23:55:59Z</updated>\n    <published>2023-11-18T23:55:59Z</published>\n    <title>Dueling Optimization with a Monotone Adversary</title>\n    <summary>  We introduce and study the problem of dueling optimization with a monotone\nadversary, which is a generalization of (noiseless) dueling convex\noptimization. The goal is to design an online algorithm to find a minimizer\n$\\mathbf{x}^{*}$ for a function $f\\colon X \\to \\mathbb{R}$, where $X \\subseteq\n\\mathbb{R}^d$. In each round, the algorithm submits a pair of guesses, i.e.,\n$\\mathbf{x}^{(1)}$ and $\\mathbf{x}^{(2)}$, and the adversary responds with any\npoint in the space that is at least as good as both guesses. The cost of each\nquery is the suboptimality of the worse of the two guesses; i.e., ${\\max}\n\\left( f(\\mathbf{x}^{(1)}), f(\\mathbf{x}^{(2)}) \\right) - f(\\mathbf{x}^{*})$.\nThe goal is to minimize the number of iterations required to find an\n$\\varepsilon$-optimal point and to minimize the total cost (regret) of the\nguesses over many rounds. Our main result is an efficient randomized algorithm\nfor several natural choices of the function $f$ and set $X$ that incurs cost\n$O(d)$ and iteration complexity $O(d\\log(1/\\varepsilon)^2)$. Moreover, our\ndependence on $d$ is asymptotically optimal, as we show examples in which any\nrandomized algorithm for this problem must incur $\\Omega(d)$ cost and iteration\ncomplexity.\n</summary>\n    <author>\n      <name>Avrim Blum</name>\n    </author>\n    <author>\n      <name>Meghal Gupta</name>\n    </author>\n    <author>\n      <name>Gene Li</name>\n    </author>\n    <author>\n      <name>Naren Sarayu Manoj</name>\n    </author>\n    <author>\n      <name>Aadirupa Saha</name>\n    </author>\n    <author>\n      <name>Yuanyuan Yang</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">21 pages. comments welcome</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/2311.11185v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/2311.11185v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DS\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DS\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.LG\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"stat.ML\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n</feed>\n"}