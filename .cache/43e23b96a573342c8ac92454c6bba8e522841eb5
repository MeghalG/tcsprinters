{"_ts": 1761546702.62145, "data": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <link href=\"http://arxiv.org/api/query?search_query%3Dti%3A%22Streaming%20Algorithms%20via%20Local%20Algorithms%20for%20Maximum%20Directed%20Cut%22%26id_list%3D%26start%3D0%26max_results%3D25\" rel=\"self\" type=\"application/atom+xml\"/>\n  <title type=\"html\">ArXiv Query: search_query=ti:\"Streaming Algorithms via Local Algorithms for Maximum Directed Cut\"&amp;id_list=&amp;start=0&amp;max_results=25</title>\n  <id>http://arxiv.org/api/zm2kolrbY2j4iU3wnkYMW9S4GKI</id>\n  <updated>2025-10-27T00:00:00-04:00</updated>\n  <opensearch:totalResults xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">1</opensearch:totalResults>\n  <opensearch:startIndex xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">0</opensearch:startIndex>\n  <opensearch:itemsPerPage xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">25</opensearch:itemsPerPage>\n  <entry>\n    <id>http://arxiv.org/abs/2411.18829v1</id>\n    <updated>2024-11-28T00:14:43Z</updated>\n    <published>2024-11-28T00:14:43Z</published>\n    <title>Streaming Algorithms via Local Algorithms for Maximum Directed Cut</title>\n    <summary>  We explore the use of local algorithms in the design of streaming algorithms\nfor the Maximum Directed Cut problem. Specifically, building on the local\nalgorithm of Buchbinder et al. (FOCS'12) and Censor-Hillel et al.\n(ALGOSENSORS'17), we develop streaming algorithms for both adversarially and\nrandomly ordered streams that approximate the value of maximum directed cut in\nbounded-degree graphs. In $n$-vertex graphs, for adversarially ordered streams,\nour algorithm uses $O(n^{1-\\Omega(1)})$ (sub-linear) space and for randomly\nordered streams, our algorithm uses logarithmic space. Moreover, both\nalgorithms require only one pass over the input stream. With a constant number\nof passes, we give a logarithmic-space algorithm which works even on graphs\nwith unbounded degree on adversarially ordered streams. Our algorithms achieve\nany fixed constant approximation factor less than $\\frac12$. In the single-pass\nsetting, this is tight: known lower bounds show that obtaining any constant\napproximation factor greater than $\\frac12$ is impossible without using linear\nspace in adversarially ordered streams (Kapralov and Krachun, STOC'19) and\n$\\Omega(\\sqrt{n})$ space in randomly ordered streams, even on bounded degree\ngraphs (Kapralov, Khanna, and Sudan, SODA'15).\n  In terms of techniques, our algorithms partition the vertices into a small\nnumber of different types based on the structure of their local neighborhood,\nensuring that each type carries enough information about the structure to\napproximately simulate the local algorithm on a vertex with that type. We then\ndevelop tools to accurately estimate the frequency of each type. This allows us\nto simulate an execution of the local algorithm on all vertices, and thereby\napproximate the value of the maximum directed cut.\n</summary>\n    <author>\n      <name>Raghuvansh R. Saxena</name>\n    </author>\n    <author>\n      <name>Noah G. Singer</name>\n    </author>\n    <author>\n      <name>Madhu Sudan</name>\n    </author>\n    <author>\n      <name>Santhoshini Velusamy</name>\n    </author>\n    <arxiv:comment xmlns:arxiv=\"http://arxiv.org/schemas/atom\">45 pages, to appear in SODA 2025</arxiv:comment>\n    <link href=\"http://arxiv.org/abs/2411.18829v1\" rel=\"alternate\" type=\"text/html\"/>\n    <link title=\"pdf\" href=\"http://arxiv.org/pdf/2411.18829v1\" rel=\"related\" type=\"application/pdf\"/>\n    <arxiv:primary_category xmlns:arxiv=\"http://arxiv.org/schemas/atom\" term=\"cs.DS\" scheme=\"http://arxiv.org/schemas/atom\"/>\n    <category term=\"cs.DS\" scheme=\"http://arxiv.org/schemas/atom\"/>\n  </entry>\n</feed>\n"}